#!/bin/sh

mount -t proc none /proc
mount -t sysfs none /sys

mknod /dev/null c 1 3
mknod /dev/zero c 1 5
mknod /dev/random c 1 8
mknod /dev/urandom c 1 9

mknod /dev/sda b 8 0
mknod /dev/vda b 254 0

mknod dev/ttyS0 c 4 64

mknod /dev/tty c 5 0
mknod /dev/ptmx c 5 2
mkdir /dev/pts
mount -t devpts none /dev/pts

mount -t debugfs none /sys/kernel/debug

if [ -f /usr/sbin/dropbear ]; then
    mkdir /etc/dropbear
    touch /etc/group
    addgroup -g 0 root
    touch /etc/passwd
    adduser -s /bin/sh -G root -h /root -u 0 -D root
    echo -e "a" | passwd root
    /usr/sbin/dropbear -RE  # regenerate host keys, errors to stdout
fi

mkdir -p /fs
mount /dev/sda /fs 1>/dev/null 2>&1 || mount /dev/vda /fs 1>/dev/null 2>&1
mount_okay=$?

if [ $mount_okay != 0 ]; then
    # centos doesn't have these built in, so load
    modprobe ata_piix
    modprobe ext4
    mount /dev/sda /fs 1>/dev/null 2>&1
    mount_okay=$?
fi

modprobe e1000
ip addr add 10.1.0.2/24 dev eth0
ip link set dev eth0 up

echo -e '\033[32m'
echo "Welcome, Jongy."
echo "Boot took $(cut -d' ' -f1 /proc/uptime) seconds"
echo "Kernel version:"
cat /proc/version
echo -e '\033[m'

if [ $mount_okay = 0 ]; then
    echo -e "\033[32mFilesystem is mounted at /fs\033[m"

    if [ -f fs/init.sh ]; then
        echo "Running fs/init.sh"
        fs/init.sh
    fi
else
    echo -e "\033[32mFilesystem mount failed\033[m"
fi

exec /bin/sh
